#!/usr/local/bin/fontforge

#
# BDF (bitmap font) maker script for Tsukurimashou, with block kludge
# Copyright (C) 2011, 2013, 2014, 2015  Matthew Skala
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.
#
# As a special exception, if you create a document which uses this font, and
# embed this font or unaltered portions of this font into the document, this
# font does not by itself cause the resulting document to be covered by the
# GNU General Public License. This exception does not however invalidate any
# other reasons why the document might be covered by the GNU General Public
# License. If you modify this font, you may extend this exception to your
# version of the font, but you are not obligated to do so. If you do not
# wish to do so, delete this exception statement from your version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Matthew Skala
# http://ansuz.sooke.bc.ca/
# mskala.sooke.bc.ca
#

Open("sfd/"+$2+".sfd");

# no kern zero-width glyphs
SelectWorthOutputting();
x=0;
foreach
  if (GlyphInfo("Width")<=0)
    Clear();
  endif
  x=x+1;
  if (x%100 == 0)
    Print(x);
  endif
endloop

# no kern hangul jamo
SelectIf(0u1100,0u11ff);
Clear();
SelectIf(0uff200,0uff6ff);
Clear();

# no kern fraction components
SelectIf(0uff000,0uff1ff);
Clear();

# set all bearings to 50
SelectWorthOutputting();
SetLBearing(50);
SetRBearing(50);

# find blocks of 1000 glyphs
nblocks=0;
x=0;
blockstart=Array(100);
blockstart[0]=-1;
blockend=Array(100);
SelectWorthOutputting();
foreach
  if (x%1000 == 0)
    nblocks=nblocks+1;
  endif
  if (x%100 == 0)
    Print(x);
  endif
  x=x+1;
  if (blockstart[nblocks-1] == -1)
    blockstart[nblocks-1]=GlyphInfo("Encoding");
    blockstart[nblocks]=-1;
  endif
  blockend[nblocks-1]=GlyphInfo("Encoding");
endloop

Print("aa");

# make bitmaps, one block at a time
BitmapsAvail([100],0);
Print("bb");
x=0;
while (x<nblocks)
  Print(blockend[x]);
  Select(blockstart[x],blockend[x]);
  BitmapsRegen([100]);
  x=x+1;
endloop

# save the results
Generate("bdf/"+$1+".","bdf",0,100);
Quit(0);
